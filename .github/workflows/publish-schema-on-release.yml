name: Publish schema on GitHub Release

on:
  workflow_run:
    workflows: ["release-please.yml"]
    types: [completed]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to publish (e.g., v1.2.3)'
        required: true
        default: ''
        type: string

permissions:
  contents: write

concurrency:
  group: "pages-gh-branch"
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.set_output.outputs.should_publish }}
      tag_name: ${{ steps.check_conditions.outputs.tag_name }}
    steps:
      - name: Determine if publish is needed
        id: set_output
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual trigger detected. Will publish."
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "tag_name=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            RUN_ID=${{ github.event.workflow_run.id }}
            # get job 'released-job' status
            conclusion=$(gh api "/repos/${{ github.repository }}/actions/runs/$RUN_ID/jobs" --jq '.jobs[] | select(.name=="released-job") | .conclusion')
          
            if [ "$conclusion" != "success" ]; then
                echo "Upstream workflow did not succeed. No publish."
                echo "should_publish=false" >> $GITHUB_OUTPUT
                exit 0
            fi
            
            echo "Upstream workflow succeeded. Will publish."
            echo "should_publish=true" >> $GITHUB_OUTPUT
          
            TAG=$(gh release view --json tagName --jq .tagName)
            echo "tag_name=$TAG" >> $GITHUB_OUTPUT
        
          else
            echo "No publish needed."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi
  build:
    if: needs.check.outputs.should_publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Resolve target tag
        id: tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ inputs.release_tag }}"
          else
            TAG=$(gh api repos/${{ github.repository }}/releases/latest --jq .tag_name)
          fi
          
          if [ -z "$TAG" ]; then
            echo "No tag resolved. Abort."
            exit 1
          fi
          
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Resolved tag: $TAG"

      - name: Checkout source at resolved tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.tag.outputs.tag }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Export JSON Schema
        run: npm run export:schema

      - name: Read version from package.json
        id: pkg
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Prepare publish directory
        run: |
          mkdir -p public/simple-server/${{ steps.pkg.outputs.version }}/
          mv SimplifiedFolder.schema.json public/simple-server/${{ steps.pkg.outputs.version }}/
          cp -f public/simple-server/${{ steps.pkg.outputs.version }}/SimplifiedFolder.schema.json public/
          touch public/.nojekyll

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: public
          commit_message: "docs(schema): publish ${{ steps.pkg.outputs.version }} from ${{ steps.tag.outputs.tag }}"
